{
  "swagger": "2.0",
  "info": {
    "title": "Pizza Service",
    "version": "v1"
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/auth/login": {
      "post": {
        "summary": "Login user",
        "description": "Authenticates user and returns role and user ID.",
        "operationId": "AuthService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoLoginRequest"
            }
          }
        ],
        "tags": [
          "auth"
        ]
      }
    },
    "/v1/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a new user with specified role (role may be ignored / validated server-side).",
        "operationId": "AuthService_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "RegisterRequest carries information required to create a new user.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRegisterRequest"
            }
          }
        ],
        "tags": [
          "auth"
        ]
      }
    }
  },
  "definitions": {
    "protoCartItems": {
      "type": "object",
      "properties": {
        "totalCost": {
          "type": "number",
          "format": "float"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "pizzaId": {
          "type": "integer",
          "format": "int32"
        },
        "pizzaTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "cost": {
          "type": "number",
          "format": "float"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "cartId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoCartItems"
          }
        },
        "name": {
          "type": "string"
        },
        "photo": {
          "type": "string"
        }
      }
    },
    "protoCartItemsResp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "cartId": {
          "type": "integer",
          "format": "int32"
        },
        "pizzaId": {
          "type": "integer",
          "format": "int32"
        },
        "cost": {
          "type": "number",
          "format": "float"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "pizzaTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "totalCost": {
          "type": "number",
          "format": "float"
        },
        "cartItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoCartItems"
          }
        }
      }
    },
    "protoCartResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "protoCheckIsOrderedResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "isOrdered": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "protoCreatePizzaResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "protoDeletePizzaResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "protoGetCartHistoryResponse": {
      "type": "object",
      "properties": {
        "cartId": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "isActive": {
          "type": "boolean"
        },
        "cartHistory": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoGetCartHistoryResponse"
          }
        }
      }
    },
    "protoGetCartItemHistoryResponse": {
      "type": "object",
      "properties": {
        "cartHistoryId": {
          "type": "integer",
          "format": "int32"
        },
        "pizzaId": {
          "type": "integer",
          "format": "int32"
        },
        "pizzaTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "cost": {
          "type": "number",
          "format": "float"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "cartHistory": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoGetCartItemHistoryResponse"
          }
        }
      }
    },
    "protoGetPizzaByIdResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "photo": {
          "type": "string"
        }
      }
    },
    "protoGetPizzasResponse": {
      "type": "object",
      "properties": {
        "pizzas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoPizzas"
          }
        }
      }
    },
    "protoLoginRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "protoLoginResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "LoginResponse returns authentication result.\nNOTE: If you later add tokens, prefer new fields:\nstring access_token = 4;\nstring refresh_token = 5;\nint64  expires_in = 6;"
    },
    "protoOrderItemData": {
      "type": "object",
      "properties": {
        "pizzaId": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "itemIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "protoOrderPizzaResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "itemIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "isExist": {
          "type": "boolean"
        },
        "cost": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "protoPizzas": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "photo": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protoRegisterRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "description": "role is optional / server may override; restrict basic length."
        }
      },
      "description": "RegisterRequest carries information required to create a new user."
    },
    "protoRegisterResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "protoUpdatePizzaResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "JWT bearer token. Format: Bearer \u003caccess_token\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
