// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.1
// source: pizza/pizza.proto

package pizza

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePizzaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price         float32                `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	Id            int32                  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	TypeId        int32                  `protobuf:"varint,4,opt,name=typeId,proto3" json:"typeId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePizzaRequest) Reset() {
	*x = CreatePizzaRequest{}
	mi := &file_pizza_pizza_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePizzaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePizzaRequest) ProtoMessage() {}

func (x *CreatePizzaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pizza_pizza_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePizzaRequest.ProtoReflect.Descriptor instead.
func (*CreatePizzaRequest) Descriptor() ([]byte, []int) {
	return file_pizza_pizza_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePizzaRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePizzaRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreatePizzaRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreatePizzaRequest) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

type CreatePizzaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePizzaResponse) Reset() {
	*x = CreatePizzaResponse{}
	mi := &file_pizza_pizza_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePizzaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePizzaResponse) ProtoMessage() {}

func (x *CreatePizzaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pizza_pizza_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePizzaResponse.ProtoReflect.Descriptor instead.
func (*CreatePizzaResponse) Descriptor() ([]byte, []int) {
	return file_pizza_pizza_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePizzaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetPizzasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TypeId        int32                  `protobuf:"varint,1,opt,name=typeId,proto3" json:"typeId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPizzasRequest) Reset() {
	*x = GetPizzasRequest{}
	mi := &file_pizza_pizza_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPizzasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPizzasRequest) ProtoMessage() {}

func (x *GetPizzasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pizza_pizza_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPizzasRequest.ProtoReflect.Descriptor instead.
func (*GetPizzasRequest) Descriptor() ([]byte, []int) {
	return file_pizza_pizza_proto_rawDescGZIP(), []int{2}
}

func (x *GetPizzasRequest) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

type GetPizzasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pizzas        []*Pizzas              `protobuf:"bytes,1,rep,name=pizzas,proto3" json:"pizzas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPizzasResponse) Reset() {
	*x = GetPizzasResponse{}
	mi := &file_pizza_pizza_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPizzasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPizzasResponse) ProtoMessage() {}

func (x *GetPizzasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pizza_pizza_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPizzasResponse.ProtoReflect.Descriptor instead.
func (*GetPizzasResponse) Descriptor() ([]byte, []int) {
	return file_pizza_pizza_proto_rawDescGZIP(), []int{3}
}

func (x *GetPizzasResponse) GetPizzas() []*Pizzas {
	if x != nil {
		return x.Pizzas
	}
	return nil
}

type Pizzas struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price         float32                `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pizzas) Reset() {
	*x = Pizzas{}
	mi := &file_pizza_pizza_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pizzas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pizzas) ProtoMessage() {}

func (x *Pizzas) ProtoReflect() protoreflect.Message {
	mi := &file_pizza_pizza_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pizzas.ProtoReflect.Descriptor instead.
func (*Pizzas) Descriptor() ([]byte, []int) {
	return file_pizza_pizza_proto_rawDescGZIP(), []int{4}
}

func (x *Pizzas) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pizzas) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type GetPizzaByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeId        int32                  `protobuf:"varint,2,opt,name=typeId,proto3" json:"typeId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPizzaByIdRequest) Reset() {
	*x = GetPizzaByIdRequest{}
	mi := &file_pizza_pizza_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPizzaByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPizzaByIdRequest) ProtoMessage() {}

func (x *GetPizzaByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pizza_pizza_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPizzaByIdRequest.ProtoReflect.Descriptor instead.
func (*GetPizzaByIdRequest) Descriptor() ([]byte, []int) {
	return file_pizza_pizza_proto_rawDescGZIP(), []int{5}
}

func (x *GetPizzaByIdRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPizzaByIdRequest) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

type GetPizzaByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price         float32                `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPizzaByIdResponse) Reset() {
	*x = GetPizzaByIdResponse{}
	mi := &file_pizza_pizza_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPizzaByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPizzaByIdResponse) ProtoMessage() {}

func (x *GetPizzaByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pizza_pizza_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPizzaByIdResponse.ProtoReflect.Descriptor instead.
func (*GetPizzaByIdResponse) Descriptor() ([]byte, []int) {
	return file_pizza_pizza_proto_rawDescGZIP(), []int{6}
}

func (x *GetPizzaByIdResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPizzaByIdResponse) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type UpdatePizzaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeId        int32                  `protobuf:"varint,2,opt,name=typeId,proto3" json:"typeId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePizzaRequest) Reset() {
	*x = UpdatePizzaRequest{}
	mi := &file_pizza_pizza_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePizzaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePizzaRequest) ProtoMessage() {}

func (x *UpdatePizzaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pizza_pizza_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePizzaRequest.ProtoReflect.Descriptor instead.
func (*UpdatePizzaRequest) Descriptor() ([]byte, []int) {
	return file_pizza_pizza_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePizzaRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePizzaRequest) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

type UpdatePizzaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Price         float32                `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	Id            int32                  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	TypeId        int32                  `protobuf:"varint,5,opt,name=typeId,proto3" json:"typeId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePizzaResponse) Reset() {
	*x = UpdatePizzaResponse{}
	mi := &file_pizza_pizza_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePizzaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePizzaResponse) ProtoMessage() {}

func (x *UpdatePizzaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pizza_pizza_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePizzaResponse.ProtoReflect.Descriptor instead.
func (*UpdatePizzaResponse) Descriptor() ([]byte, []int) {
	return file_pizza_pizza_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePizzaResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePizzaResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdatePizzaResponse) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdatePizzaResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePizzaResponse) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

type DeletePizzaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeId        int32                  `protobuf:"varint,2,opt,name=typeId,proto3" json:"typeId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePizzaRequest) Reset() {
	*x = DeletePizzaRequest{}
	mi := &file_pizza_pizza_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePizzaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePizzaRequest) ProtoMessage() {}

func (x *DeletePizzaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pizza_pizza_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePizzaRequest.ProtoReflect.Descriptor instead.
func (*DeletePizzaRequest) Descriptor() ([]byte, []int) {
	return file_pizza_pizza_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePizzaRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeletePizzaRequest) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

type DeletePizzaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePizzaResponse) Reset() {
	*x = DeletePizzaResponse{}
	mi := &file_pizza_pizza_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePizzaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePizzaResponse) ProtoMessage() {}

func (x *DeletePizzaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pizza_pizza_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePizzaResponse.ProtoReflect.Descriptor instead.
func (*DeletePizzaResponse) Descriptor() ([]byte, []int) {
	return file_pizza_pizza_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePizzaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type OrderPizzaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeId        int32                  `protobuf:"varint,2,opt,name=typeId,proto3" json:"typeId,omitempty"`
	Quantity      int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderPizzaRequest) Reset() {
	*x = OrderPizzaRequest{}
	mi := &file_pizza_pizza_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPizzaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPizzaRequest) ProtoMessage() {}

func (x *OrderPizzaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pizza_pizza_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPizzaRequest.ProtoReflect.Descriptor instead.
func (*OrderPizzaRequest) Descriptor() ([]byte, []int) {
	return file_pizza_pizza_proto_rawDescGZIP(), []int{11}
}

func (x *OrderPizzaRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderPizzaRequest) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *OrderPizzaRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type OrderPizzaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderPizzaResponse) Reset() {
	*x = OrderPizzaResponse{}
	mi := &file_pizza_pizza_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPizzaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPizzaResponse) ProtoMessage() {}

func (x *OrderPizzaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pizza_pizza_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPizzaResponse.ProtoReflect.Descriptor instead.
func (*OrderPizzaResponse) Descriptor() ([]byte, []int) {
	return file_pizza_pizza_proto_rawDescGZIP(), []int{12}
}

func (x *OrderPizzaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pizza_pizza_proto protoreflect.FileDescriptor

var file_pizza_pizza_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2f, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x22, 0x66, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x7a, 0x7a,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22,
	0x3a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x50, 0x69, 0x7a,
	0x7a, 0x61, 0x73, 0x52, 0x06, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x73, 0x22, 0x32, 0x0a, 0x06, 0x50,
	0x69, 0x7a, 0x7a, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22,
	0x3d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x40,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x3c, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x89,
	0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x57, 0x0a, 0x11, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x2e, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x7a, 0x7a, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x32, 0xac, 0x03, 0x0a, 0x0c, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x7a,
	0x7a, 0x61, 0x12, 0x19, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x7a, 0x7a,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x50, 0x69, 0x7a, 0x7a, 0x61, 0x73, 0x12, 0x17, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x7a, 0x7a, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x50, 0x69, 0x7a, 0x7a, 0x61, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x2e, 0x70, 0x69, 0x7a, 0x7a,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x7a, 0x7a,
	0x61, 0x12, 0x19, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x69, 0x7a, 0x7a, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70,
	0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x7a, 0x7a, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x12, 0x19, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x12, 0x18, 0x2e, 0x70,
	0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x69, 0x7a, 0x7a, 0x61, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x7a, 0x7a, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x11, 0x5a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70,
	0x69, 0x7a, 0x7a, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pizza_pizza_proto_rawDescOnce sync.Once
	file_pizza_pizza_proto_rawDescData []byte
)

func file_pizza_pizza_proto_rawDescGZIP() []byte {
	file_pizza_pizza_proto_rawDescOnce.Do(func() {
		file_pizza_pizza_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pizza_pizza_proto_rawDesc), len(file_pizza_pizza_proto_rawDesc)))
	})
	return file_pizza_pizza_proto_rawDescData
}

var file_pizza_pizza_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_pizza_pizza_proto_goTypes = []any{
	(*CreatePizzaRequest)(nil),   // 0: pizza.CreatePizzaRequest
	(*CreatePizzaResponse)(nil),  // 1: pizza.CreatePizzaResponse
	(*GetPizzasRequest)(nil),     // 2: pizza.GetPizzasRequest
	(*GetPizzasResponse)(nil),    // 3: pizza.GetPizzasResponse
	(*Pizzas)(nil),               // 4: pizza.Pizzas
	(*GetPizzaByIdRequest)(nil),  // 5: pizza.GetPizzaByIdRequest
	(*GetPizzaByIdResponse)(nil), // 6: pizza.GetPizzaByIdResponse
	(*UpdatePizzaRequest)(nil),   // 7: pizza.UpdatePizzaRequest
	(*UpdatePizzaResponse)(nil),  // 8: pizza.UpdatePizzaResponse
	(*DeletePizzaRequest)(nil),   // 9: pizza.DeletePizzaRequest
	(*DeletePizzaResponse)(nil),  // 10: pizza.DeletePizzaResponse
	(*OrderPizzaRequest)(nil),    // 11: pizza.OrderPizzaRequest
	(*OrderPizzaResponse)(nil),   // 12: pizza.OrderPizzaResponse
}
var file_pizza_pizza_proto_depIdxs = []int32{
	4,  // 0: pizza.GetPizzasResponse.pizzas:type_name -> pizza.Pizzas
	0,  // 1: pizza.PizzaService.CreatePizza:input_type -> pizza.CreatePizzaRequest
	2,  // 2: pizza.PizzaService.GetPizzas:input_type -> pizza.GetPizzasRequest
	5,  // 3: pizza.PizzaService.GetPizzaById:input_type -> pizza.GetPizzaByIdRequest
	7,  // 4: pizza.PizzaService.UpdatePizza:input_type -> pizza.UpdatePizzaRequest
	9,  // 5: pizza.PizzaService.DeletePizza:input_type -> pizza.DeletePizzaRequest
	11, // 6: pizza.PizzaService.OrderPizza:input_type -> pizza.OrderPizzaRequest
	1,  // 7: pizza.PizzaService.CreatePizza:output_type -> pizza.CreatePizzaResponse
	3,  // 8: pizza.PizzaService.GetPizzas:output_type -> pizza.GetPizzasResponse
	6,  // 9: pizza.PizzaService.GetPizzaById:output_type -> pizza.GetPizzaByIdResponse
	8,  // 10: pizza.PizzaService.UpdatePizza:output_type -> pizza.UpdatePizzaResponse
	10, // 11: pizza.PizzaService.DeletePizza:output_type -> pizza.DeletePizzaResponse
	12, // 12: pizza.PizzaService.OrderPizza:output_type -> pizza.OrderPizzaResponse
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_pizza_pizza_proto_init() }
func file_pizza_pizza_proto_init() {
	if File_pizza_pizza_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pizza_pizza_proto_rawDesc), len(file_pizza_pizza_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pizza_pizza_proto_goTypes,
		DependencyIndexes: file_pizza_pizza_proto_depIdxs,
		MessageInfos:      file_pizza_pizza_proto_msgTypes,
	}.Build()
	File_pizza_pizza_proto = out.File
	file_pizza_pizza_proto_goTypes = nil
	file_pizza_pizza_proto_depIdxs = nil
}
